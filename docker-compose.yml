networks:
  monitoring:

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# secrets:
#   redis_password:
#     file: ./redis_password.txt

services:
  app:
    build:
      context: ./Vitals.WebApi
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    restart: unless-stopped
    networks:
      - monitoring
    environment:
      OTLP_ENDPOINT_URL: 'http://otel-collector:4317'
    depends_on:
      - otel-collector
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - 8888:8888    # Prometheus collector metrics
      - 8889:8889    # Prometheus exporter metrics
      - 13133:13133  # Health check
      - 4317:4317    # OTLP gRPC receiver
      - 9200:55679   # zpages
    networks:
      - monitoring
  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node-exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
