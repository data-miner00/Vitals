networks:
  monitoring:

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  app-data:
    driver: local
  loki-data:
    driver: local
  tempo-data:
    driver: local
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local

# secrets:
#   redis_password:
#     file: ./redis_password.txt

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    restart: no
    networks:
      - monitoring
    environment:
      OTLP_ENDPOINT_URL: 'http://otel-collector:4317'
      ConnectionStrings__DefaultConnection: "Data Source=/app/data/vitals.db;"
      Messaging__HostName: "rabbitmq"
      Messaging__UserName: ${RABBITMQ_DEFAULT_USER}
      Messaging__Password: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - otel-collector
      - rabbitmq
    volumes:
      - app-data:/app/data
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./infra/otel-collector/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - 8888:8888    # Prometheus collector metrics
      - 8889:8889    # Prometheus exporter metrics
      - 13133:13133  # Health check
      - 4317:4317    # OTLP gRPC receiver
      - 9200:55679   # zpages
    networks:
      - monitoring
  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node-exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
  loki:
    image: grafana/loki:3.5.1
    container_name: loki
    volumes:
      - loki-data:/data/loki
    restart: unless-stopped
    ports:
      - 3100:3100
    networks:
      - monitoring
  tempo:
    image: grafana/tempo:2.0.1
    container_name: tempo
    volumes:
      - tempo-data:/tmp/tempo
      - ./infra/tempo/tempo.yml:/etc/tempo.yaml
    command: [ "-config.file=/etc/tempo.yaml" ]
    restart: unless-stopped
    ports:
      - 3200:3200
      - 4007:4007 # OTLP gRPC receiver
    depends_on:
      - otel-collector
    networks:
      - monitoring
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 5673:5672
      - 15673:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - monitoring

configs:
  rabbitmq-plugins:
    content: |
      [
        rabbitmq_management,
        rabbitmq_prometheus
      ].
